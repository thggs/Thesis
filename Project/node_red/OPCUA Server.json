[{"id":"379dd08bddc498a8","type":"tab","label":"OPCUA Server","disabled":false,"info":"","env":[]},{"id":"13cc7176fa7d23a9","type":"opcua-compact-server","z":"379dd08bddc498a8","port":54840,"endpoint":"/Resources","productUri":"","acceptExternalCommands":true,"maxAllowedSessionNumber":"10","maxConnectionsPerEndpoint":10,"maxAllowedSubscriptionNumber":100,"alternateHostname":"","name":"","showStatusActivities":false,"showErrors":true,"allowAnonymous":true,"individualCerts":false,"isAuditing":false,"serverDiscovery":false,"users":[],"xmlsetsOPCUA":[],"publicCertificateFile":"","privateCertificateFile":"","registerServerMethod":1,"discoveryServerEndpointUrl":"","capabilitiesForMDNS":"","maxNodesPerRead":1000,"maxNodesPerWrite":1000,"maxNodesPerHistoryReadData":100,"maxNodesPerBrowse":3000,"maxBrowseContinuationPoints":10,"maxHistoryContinuationPoints":10,"delayToInit":1000,"delayToClose":200,"serverShutdownTimeout":100,"addressSpaceScript":"function constructAlarmAddressSpace(server, addressSpace, eventObjects, done) {\n  // server = the created node-opcua server\n  // addressSpace = address space of the node-opcua server\n  // eventObjects = add event variables here to hold them in memory from this script\n\n  // internal sandbox objects are:\n  // node = the compact server node,\n  // coreServer = core compact server object for debug and access to NodeOPCUA\n  // this.sandboxNodeContext = node context node-red\n  // this.sandboxFlowContext = flow context node-red\n  // this.sandboxGlobalContext = global context node-red\n  // this.sandboxEnv = env variables\n  // timeout and interval functions as expected from nodejs\n\n  const opcua = coreServer.choreCompact.opcua;\n  const LocalizedText = opcua.LocalizedText;\n  const namespace = addressSpace.getOwnNamespace();\n\n  const Variant = opcua.Variant;\n  const DataType = opcua.DataType;\n  const DataValue = opcua.DataValue;\n\n  var flexServerInternals = this;\n\n  this.sandboxFlowContext.set(\"ConveyorSkill\", \"0\");\n  this.sandboxFlowContext.set(\"Station3Skill\", \"0\");\n  this.sandboxFlowContext.set(\"Station4Skill\", \"0\");\n \n  coreServer.debugLog(\"init dynamic address space\");\n  const rootFolder = addressSpace.findNode(\"RootFolder\");\n\n  node.warn(\"construct new address space for OPC UA\");\n\n  const myDevices = namespace.addFolder(rootFolder.objects, {\n    \"browseName\": \"Devices\"\n  });\n  \n  const conveyor_var = namespace.addVariable({\n    \"organizedBy\": myDevices,\n    \"browseName\": \"Conveyor\",\n    \"nodeId\": \"ns=1;s=Conveyor\",\n    \"dataType\": DataType.String,\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.String,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"ConveyorSkill\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"ConveyorSkill\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });\n\n  const station3_var = namespace.addVariable({\n    \"organizedBy\": myDevices,\n    \"browseName\": \"Station3\",\n    \"nodeId\": \"ns=1;s=Station3\",\n    \"dataType\": DataType.String,\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.String,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"Station3Skill\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"Station3Skill\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });  \n\n  const station4_var = namespace.addVariable({\n    \"organizedBy\": myDevices,\n    \"browseName\": \"Station4\",\n    \"nodeId\": \"ns=1;s=Station4\",\n    \"dataType\": DataType.String,\n    \"value\": {\n      \"get\": function () {\n        return new Variant({\n          \"dataType\": DataType.String,\n          \"value\": flexServerInternals.sandboxFlowContext.get(\"Station4Skill\")\n        });\n      },\n      \"set\": function (variant) {\n        flexServerInternals.sandboxFlowContext.set(\n          \"Station4Skill\",\n          variant.value\n        );\n        return opcua.StatusCodes.Good;\n      }\n    }\n  });  \n\n  //------------------------------------------------------------------------------\n  // Add a view\n  //------------------------------------------------------------------------------\n  const viewConveyor = namespace.addView({\n    \"organizedBy\": rootFolder.views,\n    \"browseName\": \"Devices\"\n  });\n\n  viewConveyor.addReference({\n    \"referenceType\": \"Organizes\",\n    \"nodeId\": myDevices.nodeId\n  });\n\n  coreServer.debugLog(\"create dynamic address space done\");\n  node.warn(\"construction of new address space for OPC UA done\");\n\n  done();\n}\n","x":100,"y":40,"wires":[]}]