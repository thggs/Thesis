[
    {
        "id": "c3e705927e16a9c9",
        "type": "subflow",
        "name": "Conveyor_Sensors",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 340,
                "y": 20,
                "wires": [
                    {
                        "id": "ec22f9bd73a62254",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 60,
                "wires": [
                    {
                        "id": "48a45719915bcafc",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 100,
                "wires": [
                    {
                        "id": "6b3fecb9c469eef0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 140,
                "wires": [
                    {
                        "id": "7233c7673322425e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ec22f9bd73a62254",
        "type": "revpi-getpin",
        "z": "c3e705927e16a9c9",
        "server": "881e060a.9b5288",
        "getoverwritevalue": false,
        "inputpin": "I_6_i03",
        "topic": "",
        "x": 250,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "66cf01ca8ee48ab2",
        "type": "inject",
        "z": "c3e705927e16a9c9",
        "name": "Conveyor_1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 20,
        "wires": [
            [
                "ec22f9bd73a62254"
            ]
        ]
    },
    {
        "id": "48a45719915bcafc",
        "type": "revpi-getpin",
        "z": "c3e705927e16a9c9",
        "server": "881e060a.9b5288",
        "getoverwritevalue": false,
        "inputpin": "I_4_i03",
        "topic": "",
        "x": 250,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fe0899e95e0877d3",
        "type": "inject",
        "z": "c3e705927e16a9c9",
        "name": "Conveyor_2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "48a45719915bcafc"
            ]
        ]
    },
    {
        "id": "6b3fecb9c469eef0",
        "type": "revpi-getpin",
        "z": "c3e705927e16a9c9",
        "server": "881e060a.9b5288",
        "getoverwritevalue": false,
        "inputpin": "I_2_i03",
        "topic": "",
        "x": 250,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "543bac9c3526a82c",
        "type": "inject",
        "z": "c3e705927e16a9c9",
        "name": "Conveyor_3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "6b3fecb9c469eef0"
            ]
        ]
    },
    {
        "id": "7233c7673322425e",
        "type": "revpi-getpin",
        "z": "c3e705927e16a9c9",
        "server": "881e060a.9b5288",
        "getoverwritevalue": false,
        "inputpin": "I_13_i03",
        "topic": "",
        "x": 250,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a6f11a9184ed12d1",
        "type": "inject",
        "z": "c3e705927e16a9c9",
        "name": "Conveyor_4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "7233c7673322425e"
            ]
        ]
    },
    {
        "id": "881e060a.9b5288",
        "type": "revpi-server",
        "host": "localhost",
        "port": "8000",
        "user": "",
        "password": "",
        "rejectUnauthorized": false,
        "ca": ""
    },
    {
        "id": "e07793e1b4a429a0",
        "type": "tab",
        "label": "Conveyor",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4b8f99de15735f3d",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Debug Conveyor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "934b175d29904765",
        "type": "websocket in",
        "z": "e07793e1b4a429a0",
        "name": "",
        "server": "1427a2a157ac5bfd",
        "client": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "4b8f99de15735f3d",
                "1f9d3852a868c2a4",
                "7c9ff283a08ae041"
            ]
        ]
    },
    {
        "id": "c606221aee10f735",
        "type": "join",
        "z": "e07793e1b4a429a0",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "#TOKEN#",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "6f515c785e1a9d28",
                "3264ed2187706538"
            ]
        ]
    },
    {
        "id": "8cf7f8b77d5907ec",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Source",
        "payloadType": "str",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "c087a2861681cb46",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "C1",
        "payloadType": "str",
        "x": 190,
        "y": 480,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "6f515c785e1a9d28",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor Location",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "cc0b4e33c2f9d015",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "C2",
        "payloadType": "str",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "484422f51fe0ab87",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "C3",
        "payloadType": "str",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "c71e843497143d1a",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "C4",
        "payloadType": "str",
        "x": 190,
        "y": 600,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "7406708316c36da3",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Storage",
        "payloadType": "str",
        "x": 190,
        "y": 640,
        "wires": [
            [
                "c606221aee10f735"
            ]
        ]
    },
    {
        "id": "d8cf805b2d1583e2",
        "type": "mqtt in",
        "z": "e07793e1b4a429a0",
        "name": "",
        "topic": "conveyor_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc503f15afd0d5e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "6f515c785e1a9d28",
                "3264ed2187706538"
            ]
        ]
    },
    {
        "id": "1f9d3852a868c2a4",
        "type": "mqtt out",
        "z": "e07793e1b4a429a0",
        "name": "",
        "topic": "conveyor_response",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cc503f15afd0d5e0",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "90447ed9e6f95e3e",
        "type": "http in",
        "z": "e07793e1b4a429a0",
        "name": "",
        "url": "/conveyor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "7c9ff283a08ae041"
            ]
        ]
    },
    {
        "id": "0c7a7bafd7149f80",
        "type": "http response",
        "z": "e07793e1b4a429a0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 340,
        "wires": []
    },
    {
        "id": "7c9ff283a08ae041",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "HTTP Processor",
        "func": "if(msg.payload != \"done\")\n{\n    context.set(\"message\", msg)\n    context.set(\"isHttp\", true)\n    return [null, msg.payload]\n}\nelse if(context.get(\"isHttp\"))\n{\n    var newMsg = context.get(\"message\")\n    newMsg.payload = \"done\"\n    return[newMsg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set(\"isHttp\", false)",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "0c7a7bafd7149f80"
            ],
            [
                "6f515c785e1a9d28",
                "3264ed2187706538"
            ]
        ]
    },
    {
        "id": "b06cd63526734600",
        "type": "inject",
        "z": "e07793e1b4a429a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "done",
        "payloadType": "str",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "1f9d3852a868c2a4",
                "4b8f99de15735f3d",
                "7c9ff283a08ae041"
            ]
        ]
    },
    {
        "id": "3264ed2187706538",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor Skill Processor",
        "func": "var skill = msg.payload\nvar start_pos = parseInt(skill.split('#TOKEN#')[0].replace('C',''))\nvar end_pos = parseInt(skill.split('#TOKEN#')[1].replace('C',''))\n\nvar all_pos[]\n\nif(start_pos < end_pos){\n    let n = end_pos - start_pos\n    for(let i = 0; i <= n; i++){\n        all_pos[i] = start_pos + i\n    }\n    \n    \n    node.send(all_pos)\n    node.send(123)\n    \n}else{\n    let n = start_pos - end_pos\n    for(let i = 0; i <= n; i++){\n        all_pos[i] = start_pos - i\n    }\n    \n}\n\nreturn \"aaa\"",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 520,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "f31b4d1aa10e9332",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "Update Var",
        "func": "flow.set(\"C1_Full\", msg.payload) ",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"C1_Full\", 0)",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 680,
        "wires": []
    },
    {
        "id": "f9cd78513adfe7b5",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "Update Var",
        "func": "flow.set(\"C2_Full\", msg.payload) ",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"C2_Full\", 0) ",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": []
    },
    {
        "id": "5511209114644009",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "Update Var",
        "func": "flow.set(\"C3_Full\", msg.payload) ",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"C3_Full\", 0) ",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 760,
        "wires": []
    },
    {
        "id": "68f69be3d911f6ed",
        "type": "function",
        "z": "e07793e1b4a429a0",
        "name": "Update Var",
        "func": "flow.set(\"C4_Full\", 0) ",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"C4_Full\", 0) ",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 800,
        "wires": []
    },
    {
        "id": "2ae05917221b0eae",
        "type": "subflow:c3e705927e16a9c9",
        "z": "e07793e1b4a429a0",
        "name": "",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "0322bd05f8223b8b"
            ],
            [
                "3e5d54561c644392"
            ],
            [
                "c64dc01335dc5e97"
            ],
            [
                "7f69832942e9dd75"
            ]
        ]
    },
    {
        "id": "6ee67e905a283846",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor_1_Sensor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 680,
        "wires": []
    },
    {
        "id": "9c41c39df89a592c",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor_2_Sensor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 720,
        "wires": []
    },
    {
        "id": "c86a5b3122091637",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor_3_Sensor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 760,
        "wires": []
    },
    {
        "id": "1b553c04346a8f74",
        "type": "debug",
        "z": "e07793e1b4a429a0",
        "name": "Conveyor_4_Sensor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 800,
        "wires": []
    },
    {
        "id": "0322bd05f8223b8b",
        "type": "rbe",
        "z": "e07793e1b4a429a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 680,
        "wires": [
            [
                "f31b4d1aa10e9332",
                "6ee67e905a283846"
            ]
        ]
    },
    {
        "id": "3e5d54561c644392",
        "type": "rbe",
        "z": "e07793e1b4a429a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "f9cd78513adfe7b5",
                "9c41c39df89a592c"
            ]
        ]
    },
    {
        "id": "7f69832942e9dd75",
        "type": "rbe",
        "z": "e07793e1b4a429a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "68f69be3d911f6ed",
                "1b553c04346a8f74"
            ]
        ]
    },
    {
        "id": "c64dc01335dc5e97",
        "type": "rbe",
        "z": "e07793e1b4a429a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 760,
        "wires": [
            [
                "5511209114644009",
                "c86a5b3122091637"
            ]
        ]
    },
    {
        "id": "1427a2a157ac5bfd",
        "type": "websocket-listener",
        "path": "/conveyor",
        "wholemsg": "false"
    },
    {
        "id": "cc503f15afd0d5e0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.1.207",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]